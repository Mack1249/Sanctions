' Code Generated by Sidekick is for learning and experimentation purposes only.
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
    On Error GoTo CleanUp

    Dim wsDropdowns As Worksheet
    Dim lastRow As Long, i As Long, j As Long
    Dim parentCell As Range
    Dim selectedParents As Variant, childList As String
    Dim childCell As Range
    Dim DelimiterType As String
    Dim arr As Variant
    Dim newValue As String, oldValue As String
    Dim exists As Boolean

    Set wsDropdowns = ThisWorkbook.Sheets("dropdowns")
    lastRow = 117
    DelimiterType = vbLf

    Application.EnableEvents = False

    ' Only run multi-select logic if a single cell is changed in F2:F50000
    If Not Intersect(Target, Me.Range("F2:F50000")) Is Nothing Then
        If Target.CountLarge = 1 Then
            Set parentCell = Target
            If parentCell.Validation.Type = 3 Then
                newValue = parentCell.Value
                Application.Undo
                oldValue = parentCell.Value

                If oldValue = "" Then
                    parentCell.Value = newValue
                ElseIf newValue = "" Then
                    parentCell.Value = oldValue
                Else
                    arr = Split(oldValue, DelimiterType)
                    exists = False
                    For i = LBound(arr) To UBound(arr)
                        If Trim(arr(i)) = Trim(newValue) Then
                            exists = True
                            Exit For
                        End If
                    Next i
                    If exists Then
                        Dim tempList As String: tempList = ""
                        For i = LBound(arr) To UBound(arr)
                            If Trim(arr(i)) <> Trim(newValue) Then
                                If tempList = "" Then
                                    tempList = arr(i)
                                Else
                                    tempList = tempList & DelimiterType & arr(i)
                                End If
                            End If
                        Next i
                        parentCell.Value = tempList
                    Else
                        parentCell.Value = oldValue & DelimiterType & newValue
                    End If
                End If
            End If
            ' Update dependent dropdown for this row only
            Set childCell = Me.Cells(parentCell.Row, "G")
            childList = ""
            If parentCell.Value <> "" Then
                selectedParents = Split(parentCell.Value, DelimiterType)
                For i = LBound(selectedParents) To UBound(selectedParents)
                    selectedParents(i) = Trim(selectedParents(i))
                Next i
                For j = 2 To lastRow
                    For i = LBound(selectedParents) To UBound(selectedParents)
                        If selectedParents(i) <> "" Then
                            If StrComp(wsDropdowns.Cells(j, "H").Value, selectedParents(i), vbTextCompare) = 0 Then
                                If InStr(1, "," & childList & ",", "," & wsDropdowns.Cells(j, "I").Value & ",", vbTextCompare) = 0 Then
                                    childList = childList & wsDropdowns.Cells(j, "I").Value & ","
                                End If
                            End If
                        End If
                    Next i
                Next j
                If Len(childList) > 0 Then childList = Left(childList, Len(childList) - 1)
                On Error Resume Next
                With childCell.Validation
                    .Delete
                    If childList <> "" Then
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=childList
                    Else
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=" "
                    End If
                    .IgnoreBlank = True
                    .InCellDropdown = True
                    .ShowInput = True
                    .ShowError = True
                End With
                On Error GoTo CleanUp
            Else
                On Error Resume Next
                With childCell.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=" "
                    .IgnoreBlank = True
                    .InCellDropdown = True
                    .ShowInput = True
                    .ShowError = True
                End With
                On Error GoTo CleanUp
            End If
        Else
            ' For multi-cell changes (copy/paste/delete), ONLY update dependent dropdowns, NO UNDO or multi-select logic!
            For Each parentCell In Intersect(Target, Me.Range("F2:F50000"))
                Set childCell = Me.Cells(parentCell.Row, "G")
                childList = ""
                If parentCell.Value <> "" Then
                    selectedParents = Split(parentCell.Value, DelimiterType)
                    For i = LBound(selectedParents) To UBound(selectedParents)
                        selectedParents(i) = Trim(selectedParents(i))
                    Next i
                    For j = 2 To lastRow
                        For i = LBound(selectedParents) To UBound(selectedParents)
                            If selectedParents(i) <> "" Then
                                If StrComp(wsDropdowns.Cells(j, "H").Value, selectedParents(i), vbTextCompare) = 0 Then
                                    If InStr(1, "," & childList & ",", "," & wsDropdowns.Cells(j, "I").Value & ",", vbTextCompare) = 0 Then
                                        childList = childList & wsDropdowns.Cells(j, "I").Value & ","
                                    End If
                                End If
                            End If
                        Next i
                    Next j
                    If Len(childList) > 0 Then childList = Left(childList, Len(childList) - 1)
                    On Error Resume Next
                    With childCell.Validation
                        .Delete
                        If childList <> "" Then
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=childList
                        Else
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=" "
                        End If
                        .IgnoreBlank = True
                        .InCellDropdown = True
                        .ShowInput = True
                        .ShowError = True
                    End With
                    On Error GoTo CleanUp
                Else
                    On Error Resume Next
                    With childCell.Validation
                        .Delete
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=" "
                        .IgnoreBlank = True
                        .InCellDropdown = True
                        .ShowInput = True
                        .ShowError = True
                    End With
                    On Error GoTo CleanUp
                End If
            Next parentCell
        End If
    End If

    ' Only run multi-select logic if a single cell is changed in G2:G50000
    If Not Intersect(Target, Me.Range("G2:G50000")) Is Nothing Then
        If Target.CountLarge = 1 Then
            Set childCell = Target
            If childCell.Validation.Type = 3 Then
                newValue = childCell.Value
                Application.Undo
                oldValue = childCell.Value

                If oldValue = "" Then
                    childCell.Value = newValue
                ElseIf newValue = "" Then
                    childCell.Value = oldValue
                Else
                    arr = Split(oldValue, DelimiterType)
                    exists = False
                    For i = LBound(arr) To UBound(arr)
                        If Trim(arr(i)) = Trim(newValue) Then
                            exists = True
                            Exit For
                        End If
                    Next i
                    If exists Then
                        Dim tempList2 As String: tempList2 = ""
                        For i = LBound(arr) To UBound(arr)
                            If Trim(arr(i)) <> Trim(newValue) Then
                                If tempList2 = "" Then
                                    tempList2 = arr(i)
                                Else
                                    tempList2 = tempList2 & DelimiterType & arr(i)
                                End If
                            End If
                        Next i
                        childCell.Value = tempList2
                    Else
                        childCell.Value = oldValue & DelimiterType & newValue
                    End If
                End If
            End If
        End If
        ' For multi-cell changes in G, do nothing (let Excel handle)
    End If

    Application.EnableEvents = True
    Exit Sub

CleanUp:
    Application.EnableEvents = True
End Sub
